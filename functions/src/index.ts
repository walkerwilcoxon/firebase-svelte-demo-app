import { initializeApp } from 'firebase-admin/app'
import { getAuth } from 'firebase-admin/auth'
import { getFirestore } from 'firebase-admin/firestore'
import { https, region } from 'firebase-functions'

const app = initializeApp({
  projectId: 'fir-svelte-demo-app',
})

const auth = getAuth()
const firestore = getFirestore()

// Create an admin user
auth.createUser({
  email: 'admin@reimangardens.org',
  password: 'password',
}).then((user) => {
  // Set custom claims on the admin user
  auth.setCustomUserClaims(user.uid, { admin: true })
})

// This is how cloud functions which can be called from the client are defined

// Creates a new user if they have a valid signup token
export const signUpUser = region('us-central1').https.onCall(
  async (data: { email: string; password: string, signupToken: string }, context: https.CallableContext) => {
    // Throw error if they don't have a valid signup token 
    // (obviously in a real app, tokens would be generated by admin with an expiration date)
    if (data.signupToken != '2413fb3709b05939') {
      throw new https.HttpsError('permission-denied', 'Invalid signup token')
    }
    // Create the user using the email and password
    const user = await auth.createUser({
      email: data.email,
      password: data.password,
    })
  }
)